<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>WebStorage ： localStorage 和 sessionStorage</title>
      <link href="blog/webstorage/"/>
      <url>blog/webstorage/</url>
      
        <content type="html"><![CDATA[<h4 id="什么是WebStorage"><a href="#什么是WebStorage" class="headerlink" title="什么是WebStorage"></a>什么是WebStorage</h4><p>WebStorage称为浏览器存储，分为localStorage 和 sessionStorage ，是用来在浏览器中存储 key/value 对的数据</p><p>需要注意的是WebStorage称为浏览器存储的value值总是以字符串的形式存储，非字符串类型的值会默认调用其toString()方法转为字符串类型。</p><p><strong>localStorage和sessionStorage的区别</strong></p><blockquote><p>localStorage 保存的数据没有过期时间，用于长久保存整个网站的数据，直到手动去删除。</p><p>sessionStorage 保存的数据有时效，当页面会话结束，即页面被关闭存储在 sessionStorage 的数据会被清除</p></blockquote><p><strong>WebStorage与cookie的区别</strong></p><ol><li>大小：<blockquote><p>cookie的大小被限制在4KB；<br/><br>localStorage和sessionStorage的存储数据大小一般都是：5MB</p></blockquote></li><li>与服务端交互：<blockquote><p>cookie是随HTTP事务一起被发送的，因此会浪费一部分发送cookie时使用的带宽；<br/><br>localStorage和sessionStorage都保存在客户端，不与服务器进行交互通信</p></blockquote></li><li>易用性：<blockquote><p>cookie需要自己封装setCookie，getCookie方法；<br/><br>localStorage和sessionStorage 提供原生的api操作方便</p></blockquote></li><li>有效期：<blockquote><p>Cookie一般由服务器生成，可设置失效时间，如果在浏览器端生成Cookie，默认是关闭浏览器后失效；<br/><br>localStorage 永久有效，除非被清除；<br> sessionStorage仅在当前会话下有效，关闭页面或浏览器后被清除</p></blockquote></li></ol><h4 id="WebStorage的属性和方法"><a href="#WebStorage的属性和方法" class="headerlink" title="WebStorage的属性和方法"></a>WebStorage的属性和方法</h4><p>localStorage 和 sessionStorage 具有相同的属性和操作方法</p><blockquote><p>属性</p></blockquote><pre><code>length: 返回一个整数，表示存储在Storage对象中的数据项的数量</code></pre><blockquote><p>方法</p></blockquote><pre><code>setItem(key, value)：保存数据，以键值对的方式储存信息getItem(key)：获取数据，将键值传入，即可获取到对应的value值removeItem(key)：删除单个数据，根据键值移除对应的信息。clear()：删除所有的数据key(index)：获取某个索引的key</code></pre><h4 id="具体用法"><a href="#具体用法" class="headerlink" title="具体用法"></a>具体用法</h4><p>仅以localStorage为例。</p><ol><li>写入数据</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">localStorage</span>.setItem(<span class="string">&quot;key&quot;</span>, <span class="string">&quot;value&quot;</span>);</span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"><span class="built_in">localStorage</span>.key = <span class="string">&quot;value&quot;</span>;</span><br><span class="line"><span class="built_in">localStorage</span>[<span class="string">&quot;key&quot;</span>] = <span class="string">&quot;value&quot;</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>读取数据</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value = <span class="built_in">localStorage</span>.getItem(<span class="string">&quot;key&quot;</span>);</span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"><span class="keyword">var</span> value = <span class="built_in">localStorage</span>.key;</span><br><span class="line"><span class="keyword">var</span> value = <span class="built_in">localStorage</span>[<span class="string">&quot;key&quot;</span>];</span><br></pre></td></tr></table></figure><ol start="3"><li>删除指定的数据</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">localStorage</span>.removeItem(<span class="string">&quot;key&quot;</span>);</span><br></pre></td></tr></table></figure><ol start="4"><li>清空数据</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">localStorage</span>.clear();</span><br></pre></td></tr></table></figure><h4 id="对象类型数据的存储"><a href="#对象类型数据的存储" class="headerlink" title="对象类型数据的存储"></a>对象类型数据的存储</h4><p>前面已经提到过，WebStorage存储的数据只能是字符串类型，非字符串类型会默认调用toString()方法，而对象的toString()方法返回的是固定字符串”[object Object]”，所以通常使用JSON.stringify()方法将json对象转换为json字符串，读取之后要再使用JSON.parse()方法将JSON字符串转换成为JSON对象。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 存储</span></span><br><span class="line"><span class="keyword">var</span> data=&#123;</span><br><span class="line">    name:<span class="string">&#x27;zhangsan&#x27;</span>,</span><br><span class="line">    age: <span class="number">18</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">localStorage</span>.setItem(<span class="string">&quot;key&quot;</span>,<span class="built_in">JSON</span>.stringify(data));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取</span></span><br><span class="line"><span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(<span class="built_in">localStorage</span>.getItem(<span class="string">&quot;key&quot;</span>));</span><br></pre></td></tr></table></figure><h4 id="存储数据设置过期时间"><a href="#存储数据设置过期时间" class="headerlink" title="存储数据设置过期时间"></a>存储数据设置过期时间</h4><p>因为localStorage 保存的数据永久保存没有过期时间，而sessionStorage保存的数据当回话关闭就会被清除，所以如果要设置存储数据的过期时间，通常做法是使用localStorage，存入的数据格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; data为要存取的数据，Date是过期时间</span><br><span class="line">&#123;value: data, timeout : Date&#125;</span><br></pre></td></tr></table></figure><p>可以封装成一个公用的模块，setItem的时候设置好过期时间，然后getItem的时候先比对是否过期，若没过期直接返回data值，若数据过期则清除此条数据并返回null。</p>]]></content>
      
      
      <categories>
          
          <category> WebStorage </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebStorage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack常用的配置插件</title>
      <link href="blog/webpack/"/>
      <url>blog/webpack/</url>
      
        <content type="html"><![CDATA[<h3 id="1-快速上手"><a href="#1-快速上手" class="headerlink" title="1 快速上手"></a>1 快速上手</h3><blockquote><h4 id="1-0-安装"><a href="#1-0-安装" class="headerlink" title="1.0 安装"></a>1.0 安装</h4></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br><span class="line">npm install webpack webpack-cli --save-dev</span><br></pre></td></tr></table></figure><blockquote><h4 id="1-1-初始化项目"><a href="#1-1-初始化项目" class="headerlink" title="1.1 初始化项目"></a>1.1 初始化项目</h4></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 创建文件</span><br><span class="line">├── src   # 源码目录</span><br><span class="line">│   ├── common.js</span><br><span class="line">│   └── index.js</span><br><span class="line">│   └── list.js</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 编写 a.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编写 index.js</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="built_in">require</span>(<span class="string">&#x27;./a-module&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><blockquote><h4 id="1-2-启动-webpack默认支持0配置-配置scripts脚本"><a href="#1-2-启动-webpack默认支持0配置-配置scripts脚本" class="headerlink" title="1.2 启动 webpack默认支持0配置,配置scripts脚本"></a>1.2 启动 webpack默认支持0配置,配置scripts脚本</h4></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  &quot;build&quot;: &quot;webpack&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><h4 id="1-3-webpack-config-js-默认执行打包文件"><a href="#1-3-webpack-config-js-默认执行打包文件" class="headerlink" title="1.3 webpack.config.js 默认执行打包文件"></a>1.3 webpack.config.js 默认执行打包文件</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// package.json</span></span><br><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;build&quot;</span>: <span class="string">&quot;webpack --env=production &quot;</span>,</span><br><span class="line">    <span class="string">&quot;dev&quot;</span>: <span class="string">&quot;webpack --env=development&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="comment">// 打包文件如果导出函数，参数就是env</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">env</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(env); <span class="comment">// development / production</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> isDev = env == <span class="string">&quot;development&quot;</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        mode : isDev ? <span class="string">&quot;development&quot;</span> : <span class="string">&quot;production&quot;</span></span><br><span class="line">        entry:<span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">        output:&#123;</span><br><span class="line">            filename:<span class="string">&#x27;bundle.js&#x27;</span>, <span class="comment">// 打包出的结果文件</span></span><br><span class="line">            path:path.resolve(__dirname,<span class="string">&#x27;dist&#x27;</span>) <span class="comment">// 打包到dist目录下</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><h4 id="1-4-文件Hash值"><a href="#1-4-文件Hash值" class="headerlink" title="1.4 文件Hash值"></a>1.4 文件Hash值</h4></blockquote><ul><li>hash 整个项目的hash值</li><li>chunkhash 根据入口产生hash值</li><li>contentHash 根据每个文件的内容产生的hash值</li></ul><p>我们可以合理的使用hash戳，进行文件的缓存</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">output:&#123;</span><br><span class="line">    filename:<span class="string">&#x27;bundle.[hash].js&#x27;</span>, <span class="comment">// 打包出的结果文件带上hash戳</span></span><br><span class="line">    path:path.resolve(__dirname,<span class="string">&#x27;dist&#x27;</span>) <span class="comment">// 打包到dist目录下</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-常用开发配置插件"><a href="#2-常用开发配置插件" class="headerlink" title="2 常用开发配置插件"></a>2 常用开发配置插件</h3><blockquote><h4 id="2-1-webpack-merge-合并打包配置文件"><a href="#2-1-webpack-merge-合并打包配置文件" class="headerlink" title="2.1 webpack-merge 合并打包配置文件"></a>2.1 webpack-merge 合并打包配置文件</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack-merge --save-dev </span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; merge &#125; = <span class="built_in">require</span>(<span class="string">&#x27;webpack-merge&#x27;</span>); <span class="comment">// 引入</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dev = <span class="built_in">require</span>(<span class="string">&#x27;./webpack.dev&#x27;</span>); <span class="comment">// 开发环境</span></span><br><span class="line"><span class="keyword">const</span> prod = <span class="built_in">require</span>(<span class="string">&#x27;./webpack.prod&#x27;</span>); <span class="comment">// 生产环境</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 基础配置</span></span><br><span class="line"><span class="keyword">const</span> base = &#123;</span><br><span class="line">    entry:<span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">    output:&#123;</span><br><span class="line">        filename:<span class="string">&#x27;bundle.js&#x27;</span>,</span><br><span class="line">        path:path.resolve(__dirname,<span class="string">&#x27;../dist&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">env</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(env == <span class="string">&quot;development&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> merge(base,dev); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> merge(base,prod)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><h4 id="2-2-webpack-dev-server-配置开发服务器"><a href="#2-2-webpack-dev-server-配置开发服务器" class="headerlink" title="2.2 webpack-dev-server 配置开发服务器"></a>2.2 webpack-dev-server 配置开发服务器</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack-dev-server --save-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">// package.json</span></span><br><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;build&quot;</span>: <span class="string">&quot;webpack --env.production&quot;</span>,</span><br><span class="line">    <span class="string">&quot;dev&quot;</span>: <span class="string">&quot;webpack-dev-server --env.development&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 本地开发服务的配置</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    mode:<span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">    devServer: &#123; </span><br><span class="line">        contentBase: path.resolve(__dirname, <span class="string">&quot;../dist&quot;</span>), <span class="comment">// 更改静态文件目录位置</span></span><br><span class="line">        compress: <span class="literal">true</span>, <span class="comment">// 开启gzip</span></span><br><span class="line">        port: <span class="number">3000</span>, <span class="comment">// 更改端口号</span></span><br><span class="line">        open:<span class="literal">true</span>,  <span class="comment">// 自动打开浏览器</span></span><br><span class="line">        proxy:&#123;     <span class="comment">// 解决开发阶段的跨域问题</span></span><br><span class="line">            <span class="string">&#x27;/api&#x27;</span>: <span class="string">&#x27;http://m.ctrip.com&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><h4 id="2-3-html-webpack-plugin-自动生成HTML文件模板"><a href="#2-3-html-webpack-plugin-自动生成HTML文件模板" class="headerlink" title="2.3 html-webpack-plugin 自动生成HTML文件模板"></a>2.3 html-webpack-plugin 自动生成HTML文件模板</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">npm install html-webpack-plugin --save-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">// 插件使用</span></span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class="line">plugins:[</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">        filename:<span class="string">&#x27;index.[hash].html&#x27;</span>, <span class="comment">// 打包出来的文件名</span></span><br><span class="line">        template:path.resolve(__dirname,<span class="string">&#x27;../public/index.html&#x27;</span>),</span><br><span class="line">        hash:<span class="literal">true</span>, <span class="comment">// 在引用资源的后面增加hash戳</span></span><br><span class="line">        minify:&#123;</span><br><span class="line">            removeAttributeQuotes:<span class="literal">true</span> <span class="comment">// 删除属性双引号</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><h4 id="2-4-clean-webpack-plugin-清空之前打包结果"><a href="#2-4-clean-webpack-plugin-清空之前打包结果" class="headerlink" title="2.4 clean-webpack-plugin 清空之前打包结果"></a>2.4 clean-webpack-plugin 清空之前打包结果</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install clean-webpack-plugin --save-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line"><span class="keyword">const</span> &#123; CleanWebpackPlugin &#125; = <span class="built_in">require</span>(<span class="string">&#x27;clean-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">new</span> CleanWebpackPlugin(&#123;</span><br><span class="line">    <span class="comment">// 清空匹配的路径</span></span><br><span class="line">    cleanOnceBeforeBuildPatterns: [path.resolve(__dirname, <span class="string">&quot;./dist&quot;</span>)],</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><h4 id="2-5-clean-webpack-plugin-清空之前打包结果"><a href="#2-5-clean-webpack-plugin-清空之前打包结果" class="headerlink" title="2.5 clean-webpack-plugin 清空之前打包结果"></a>2.5 clean-webpack-plugin 清空之前打包结果</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install clean-webpack-plugin --save-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line"><span class="keyword">const</span> &#123; CleanWebpackPlugin &#125; = <span class="built_in">require</span>(<span class="string">&#x27;clean-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">new</span> CleanWebpackPlugin(&#123;</span><br><span class="line">    <span class="comment">// 清空匹配的路径</span></span><br><span class="line">    cleanOnceBeforeBuildPatterns: [path.resolve(__dirname, <span class="string">&quot;./dist&quot;</span>)],</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-处理css文件"><a href="#3-处理css文件" class="headerlink" title="3 处理css文件"></a>3 处理css文件</h3><blockquote><h4 id="3-1-style-loader-css-loader"><a href="#3-1-style-loader-css-loader" class="headerlink" title="3.1 style-loader css-loader"></a>3.1 style-loader css-loader</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">npm install style-loader css-loader --save-dev</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">  rules: [</span><br><span class="line">    &#123;</span><br><span class="line">       test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">       use: [<span class="string">&quot;style-loader&quot;</span>, <span class="string">&quot;css-loader&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><h4 id="3-2-mini-css-extract-plugin-抽离css文件"><a href="#3-2-mini-css-extract-plugin-抽离css文件" class="headerlink" title="3.2 mini-css-extract-plugin 抽离css文件"></a>3.2 mini-css-extract-plugin 抽离css文件</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">npm install mini-css-extract-plugin --save-dev</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">&#x27;mini-css-extract-plugin&#x27;</span>)</span><br><span class="line"><span class="comment">// module.rules</span></span><br><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">    use: [</span><br><span class="line">        !isDev &amp;&amp; MiniCssExtractPlugin.loader,</span><br><span class="line">        isDev &amp;&amp; <span class="string">&#x27;style-loader&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;css-loader&quot;</span></span><br><span class="line">    ].filter(<span class="built_in">Boolean</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//plugins</span></span><br><span class="line"><span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">    filename: <span class="string">&quot;css/[name].css&quot;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><h4 id="3-3-css预处理器"><a href="#3-3-css预处理器" class="headerlink" title="3.3 css预处理器"></a>3.3 css预处理器</h4></blockquote><p>不同的css预处理器要安装不同的loader来进行解析</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// less: 执行less-loader处理文件的时候会调用less模块所有两个模块都需要安装</span></span><br><span class="line">npm i less-loader less --save-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">// sass: </span></span><br><span class="line">npm i sass-loader node-sass --save-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">// stylus: </span></span><br><span class="line">npm i stylus-loader  stylus --save-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用less</span></span><br><span class="line">&#123;</span><br><span class="line">    test:<span class="regexp">/\.less$/</span>,</span><br><span class="line">    use:[</span><br><span class="line">        <span class="comment">// dev模式使用style-loader, 生产模式抽离成单独的文件</span></span><br><span class="line">        isDev ? <span class="string">&#x27;style-loader&#x27;</span>:  MiniCssExtractPlugin.loader ？, </span><br><span class="line">        <span class="string">&quot;css-loader&quot;</span>,</span><br><span class="line">        <span class="string">&quot;less-loader&quot;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><h4 id="3-4-postcss-loader-增加样式前缀"><a href="#3-4-postcss-loader-增加样式前缀" class="headerlink" title="3.4 postcss-loader 增加样式前缀"></a>3.4 postcss-loader 增加样式前缀</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">npm install postcss-loader autoprefixer --save-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">// demo</span></span><br><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">    use: [</span><br><span class="line">        <span class="comment">// dev模式使用style-loader, 生产模式抽离成单独的文件</span></span><br><span class="line">        isDev ? <span class="string">&#x27;style-loader&#x27;</span>:  MiniCssExtractPlugin.loader ？, </span><br><span class="line">        <span class="string">&quot;css-loader&quot;</span>,</span><br><span class="line">        <span class="string">&quot;postcss-loader&quot;</span> <span class="comment">// 需创建postcss的配置文件postcss.config.js</span></span><br><span class="line">        <span class="string">&quot;less-loader&quot;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// postcss.config.js 文件</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    plugins:[</span><br><span class="line">        <span class="built_in">require</span>(<span class="string">&#x27;autoprefixer&#x27;</span>)</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>也可以配置浏览器的兼容性范围 <a href="https://www.npmjs.com/package/browserslist">.browserslistrc</a> <a href="https://www.jianshu.com/p/bbe85745e655">使用手册(简书)</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cover 99.5%</span><br></pre></td></tr></table></figure><blockquote><h4 id="3-5-文件压缩"><a href="#3-5-文件压缩" class="headerlink" title="3.5 文件压缩"></a>3.5 文件压缩</h4></blockquote><ul><li>optimize-css-assets-webpack-plugin css文件压缩</li><li>terser-webpack-plugin js文件压缩</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm i optimize-css-assets-webpack-plugin terser-webpack-plugin --save-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入</span></span><br><span class="line"><span class="keyword">const</span> OptimizeCSSAssetsPlugin = <span class="built_in">require</span>(<span class="string">&#x27;optimize-css-assets-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> TerserJSPlugin = <span class="built_in">require</span>(<span class="string">&#x27;terser-webpack-plugin&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 优化</span></span><br><span class="line">optimization:&#123;</span><br><span class="line">    minimizer:[</span><br><span class="line">        <span class="keyword">new</span> TerserJSPlugin(&#123;&#125;), </span><br><span class="line">        <span class="keyword">new</span> OptimizeCSSAssetsPlugin(&#123;&#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>注意：minimizer配置在mode为production时才会生效，另外设置optimization.minimizer会覆盖webpack提供的默认值，所以如果手动压缩css文件，那么js文件也需要手动压缩</em></p><h3 id="4-处理文件类型-file-loader-url-loader"><a href="#4-处理文件类型-file-loader-url-loader" class="headerlink" title="4 处理文件类型 file-loader / url-loader"></a>4 处理文件类型 file-loader / url-loader</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i file-loader url-loader --save-dev</span><br></pre></td></tr></table></figure><blockquote><h4 id="4-1-file-loader会将图片进行打包，并将打包后的路径返回"><a href="#4-1-file-loader会将图片进行打包，并将打包后的路径返回" class="headerlink" title="4.1 file-loader会将图片进行打包，并将打包后的路径返回"></a>4.1 file-loader会将图片进行打包，并将打包后的路径返回</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    test:<span class="regexp">/\.jpe?g|png|gif/</span>,</span><br><span class="line">    use:&#123;</span><br><span class="line">        loader:<span class="string">&#x27;file-loader&#x27;</span>,</span><br><span class="line">        options:&#123;</span><br><span class="line">            name:<span class="string">`img/[name].[ext]`</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><h4 id="4-2-处理icon-二进制文件也是使用file-loader来打包"><a href="#4-2-处理icon-二进制文件也是使用file-loader来打包" class="headerlink" title="4.2 处理icon: 二进制文件也是使用file-loader来打包"></a>4.2 处理icon: 二进制文件也是使用file-loader来打包</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    test:<span class="regexp">/woff|ttf|eot|svg|otf/</span>,</span><br><span class="line">    use:&#123;</span><br><span class="line">        loader:<span class="string">&#x27;file-loader&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><h4 id="4-3-转化成base64"><a href="#4-3-转化成base64" class="headerlink" title="4.3 转化成base64"></a>4.3 转化成base64</h4><p>使用url-loader可将满足条件的图片转化成base64,不满足条件的url-loader会自动调用file-loader来进行处理</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    test:<span class="regexp">/\.jpe?g|png|gif/</span>,</span><br><span class="line">    use:&#123;</span><br><span class="line">        loader:<span class="string">&#x27;url-loader&#x27;</span>,</span><br><span class="line">        options:&#123;</span><br><span class="line">            limit:<span class="number">100</span>*<span class="number">1024</span>,</span><br><span class="line">            name:<span class="string">`img/[name].[ext]`</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-处理JS模块"><a href="#5-处理JS模块" class="headerlink" title="5.处理JS模块"></a>5.处理JS模块</h3><blockquote><h4 id="5-1-将es6代码编译成es5代码，-babel-loader"><a href="#5-1-将es6代码编译成es5代码，-babel-loader" class="headerlink" title="5.1 将es6代码编译成es5代码， babel-loader"></a>5.1 将es6代码编译成es5代码， babel-loader</h4></blockquote><ul><li>@babel/core 是babel中的核心模块</li><li>@babel/preset-env 的作用是es6转化es5插件的插件集合</li><li>babel-loader 是webpack和loader的桥梁。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">npm install @babel/core @babel/preset-env babel-loader --save-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置loader</span></span><br><span class="line">&#123;</span><br><span class="line">    test:<span class="regexp">/\.js$/</span>,</span><br><span class="line">    exclude:<span class="regexp">/node_modules/</span>,</span><br><span class="line">    loader:<span class="string">&#x27;babel-loader&#x27;</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>增加babel的配置文件 .babelrc</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;presets&quot;</span>: [<span class="string">&quot;@babel/preset-env&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><h4 id="5-2-解析装饰器等高级语法"><a href="#5-2-解析装饰器等高级语法" class="headerlink" title="5.2 解析装饰器等高级语法"></a>5.2 解析装饰器等高级语法</h4></blockquote><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @babel&#x2F;plugin-proposal-class-properties @babel&#x2F;plugin-proposal-decorators</span><br></pre></td></tr></table></figure><p>.babelrc文件配置plugins</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 元素也是数组的话，数组的第二个元素会作为plugin的配置参数</span></span><br><span class="line"><span class="string">&quot;plugins&quot;</span>: [</span><br><span class="line">    <span class="comment">// 解析装饰器语法</span></span><br><span class="line">    [<span class="string">&quot;@babel/plugin-proposal-decorators&quot;</span>, &#123; <span class="string">&quot;legacy&quot;</span>: <span class="literal">true</span> &#125;],</span><br><span class="line">    <span class="comment">// 解析class的高级语法，如直接定义类的属性 </span></span><br><span class="line">    [<span class="string">&quot;@babel/plugin-proposal-class-properties&quot;</span>,&#123;<span class="string">&quot;loose&quot;</span>:<span class="literal">true</span>&#125;]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">// legacy:true表示继续使用装饰器装饰器</span></span><br><span class="line"><span class="comment">// loose为false时会采用Object.defineProperty定义属性</span></span><br></pre></td></tr></table></figure><ul><li>Plugin会运行在Preset之前</li><li>Plugin 会从第一个开始顺序执行，Preset则是相反的</li></ul><blockquote><h4 id="5-3-解析ES7以上新增的API-corejs"><a href="#5-3-解析ES7以上新增的API-corejs" class="headerlink" title="5.3 解析ES7以上新增的API (corejs)"></a>5.3 解析ES7以上新增的API (corejs)</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">npm install core-js@<span class="number">2</span> --save</span><br><span class="line"></span><br><span class="line"><span class="comment">//.babelrc</span></span><br><span class="line"><span class="string">&quot;presets&quot;</span>: [</span><br><span class="line">    [<span class="string">&quot;@babel/preset-env&quot;</span>,&#123;</span><br><span class="line">        <span class="string">&quot;useBuiltIns&quot;</span>:<span class="string">&quot;usage&quot;</span>, <span class="comment">// 按需加载es7以上新增的api</span></span><br><span class="line">        <span class="string">&quot;corejs&quot;</span>:<span class="number">2</span> <span class="comment">// corejs 替代了以前的pollyfill</span></span><br><span class="line">    &#125;]</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><h4 id="5-4-使用transform-runtime可以帮我们节省代码"><a href="#5-4-使用transform-runtime可以帮我们节省代码" class="headerlink" title="5.4 使用transform-runtime可以帮我们节省代码"></a>5.4 使用transform-runtime可以帮我们节省代码</h4></blockquote><p>A plugin that enables the re-use of Babel’s injected helper code to save on codesize.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注意@babel/runtime 是生产依赖</span></span><br><span class="line">npm install --save-dev @babel/plugin-transform-runtime </span><br><span class="line">npm install --save @babel/runtime</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在.babelrc中配置插件</span></span><br><span class="line"><span class="string">&quot;plugins&quot;</span>: [</span><br><span class="line">    ...,</span><br><span class="line">    <span class="comment">// 用来节约代码，当用到一些高级API统一装换成使用@babel/runtime提供的，</span></span><br><span class="line">    <span class="comment">// 所以@babel/runtime是生产依赖</span></span><br><span class="line">    <span class="string">&quot;@babel/plugin-transform-runtime&quot;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><h4 id="5-5-解析Jsx语法"><a href="#5-5-解析Jsx语法" class="headerlink" title="5.5 解析Jsx语法"></a>5.5 解析Jsx语法</h4></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">npm i @babel/preset-react --save-dev <span class="comment">//解析jsx语法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// presets中插件从下往上执行 </span></span><br><span class="line"><span class="string">&quot;presets&quot;</span>: [</span><br><span class="line">    [<span class="string">&quot;@babel/preset-env&quot;</span>,&#123;</span><br><span class="line">        <span class="string">&quot;useBuiltIns&quot;</span>:<span class="string">&quot;usage&quot;</span>,</span><br><span class="line">        <span class="string">&quot;corejs&quot;</span>:<span class="number">2</span> </span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="string">&quot;@babel/preset-react&quot;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><h4 id="5-6-解析ts语法"><a href="#5-6-解析ts语法" class="headerlink" title="5.6 解析ts语法"></a>5.6 解析ts语法</h4></blockquote><ol><li>使用@babel/preset-typescript可以不需要借助typescript</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm install @babel/preset-typescript</span><br><span class="line"></span><br><span class="line"><span class="comment">// presets中插件从下往上执行 </span></span><br><span class="line"><span class="string">&quot;presets&quot;</span>: [</span><br><span class="line">    [<span class="string">&quot;@babel/preset-env&quot;</span>,&#123;</span><br><span class="line">        <span class="string">&quot;useBuiltIns&quot;</span>:<span class="string">&quot;usage&quot;</span>,</span><br><span class="line">        <span class="string">&quot;corejs&quot;</span>:<span class="number">2</span> </span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="string">&quot;@babel/preset-react&quot;</span>，</span><br><span class="line">    [<span class="string">&quot;@babel/preset-typescript&quot;</span>,&#123;</span><br><span class="line">       <span class="string">&quot;allExtensions&quot;</span>: <span class="literal">true</span>  </span><br><span class="line">   &#125;]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ol start="2"><li>也使用ts-loader，需要安装typescript进行ts相关配置</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">npm install typescript ts-loader --save-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成ts的配置文件</span></span><br><span class="line">npx tsc --init</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置ts-loader</span></span><br><span class="line">&#123;</span><br><span class="line">    test:<span class="regexp">/\.tsx?/</span>,</span><br><span class="line">    use: [<span class="string">&#x27;ts-loader&#x27;</span>],</span><br><span class="line">    exclude: <span class="regexp">/node_modules/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><h4 id="5-7-配置ts-react环境"><a href="#5-7-配置ts-react环境" class="headerlink" title="5.7 配置ts+react环境"></a>5.7 配置ts+react环境</h4></blockquote><p>安装react相关模块</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">npm i @babel/preset-react --save-dev # 解析jsx语法</span><br><span class="line">npm i react @types/react @types/react-dom react react-dom typescript</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化ts配置文件 tsconfig.json</span></span><br><span class="line">npx typescript --init</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改tsconfig.json配置文件</span></span><br><span class="line"><span class="string">&quot;compilerOptions&quot;</span> ： &#123;</span><br><span class="line">    ...,</span><br><span class="line">    <span class="string">&quot;jsx&quot;</span> : <span class="string">&quot;react&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置</span></span><br><span class="line"><span class="string">&quot;presets&quot;</span>: [</span><br><span class="line">    [<span class="string">&quot;@babel/preset-env&quot;</span>,&#123;</span><br><span class="line">        <span class="string">&quot;useBuiltIns&quot;</span>:<span class="string">&quot;usage&quot;</span>,</span><br><span class="line">        <span class="string">&quot;corejs&quot;</span>:<span class="number">2</span> </span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="string">&quot;@babel/preset-react&quot;</span>，</span><br><span class="line">    [<span class="string">&quot;@babel/preset-typescript&quot;</span>,&#123;</span><br><span class="line">       <span class="string">&quot;allExtensions&quot;</span>: <span class="literal">true</span>  <span class="comment">// 用于支持各种类型后缀文件 </span></span><br><span class="line">    &#125;]</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><h4 id="5-X-添加eslint校验"><a href="#5-X-添加eslint校验" class="headerlink" title="5.X 添加eslint校验"></a>5.X 添加eslint校验</h4></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install eslint</span><br><span class="line">npx eslint --init # 初始化配置文件</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置eslint-loader可以实时校验js文件的正确性,pre表示在所有loader执行前执行</span></span><br><span class="line">&#123;</span><br><span class="line">    test:<span class="regexp">/\.js/</span>,</span><br><span class="line">    enforce:<span class="string">&#x27;pre&#x27;</span>,</span><br><span class="line">    use:<span class="string">&#x27;eslint-loader&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令</title>
      <link href="blog/git-shell/"/>
      <url>blog/git-shell/</url>
      
        <content type="html"><![CDATA[<blockquote><p>git常用命令</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">git log                      <span class="comment">// 查看commit的日志</span></span><br><span class="line">git stash                    <span class="comment">// 缓存改动</span></span><br><span class="line">git stash pop                <span class="comment">// 提取缓存的代码</span></span><br><span class="line">git pull origin dev          <span class="comment">// 拉取远程仓储</span></span><br><span class="line">git status                   <span class="comment">// 查看文件状态</span></span><br><span class="line">git add *                    <span class="comment">// 暂存改动</span></span><br><span class="line">git commit -m <span class="string">&quot;提交信息&quot;</span>      <span class="comment">// 提交暂存，生成一个提交记录</span></span><br><span class="line">git checkout dev             <span class="comment">// 切换到dev分支</span></span><br><span class="line">git merge dev                <span class="comment">// 合并分支代码</span></span><br><span class="line">git push origin dev          <span class="comment">// 提交文件</span></span><br><span class="line"></span><br><span class="line">git config -l                <span class="comment">// 查看git配置信息</span></span><br><span class="line">git reset --soft  HAED~<span class="number">1</span>     <span class="comment">// 安全回退到之前一次提交的内容</span></span><br><span class="line">git reset --hard origin/dev  <span class="comment">// 获取远程仓储最新的代码，覆盖掉自己的改动</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置git的初始化信息</span></span><br><span class="line">git config --<span class="built_in">global</span> user.name <span class="string">&quot;&quot;</span>    <span class="comment">// 用户名</span></span><br><span class="line">git config --<span class="built_in">global</span> user.email <span class="string">&quot;&quot;</span>   <span class="comment">// 邮箱</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//ssh秘钥设置</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;&quot;</span> <span class="comment">// 邮箱</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello Hexo</title>
      <link href="blog/hello-hexo/"/>
      <url>blog/hello-hexo/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
